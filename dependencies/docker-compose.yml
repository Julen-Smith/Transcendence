services:

  certbot:
    build: certbot/build/main
    container_name: transcendence_certbot
    image: transcendence_certbot
    volumes:
      - certs:/etc/letsencrypt
      - webroot:/var/www/certbot
    entrypoint: tail -f

  nginx-waf:
    build: nginx-waf/build/main
    container_name: transcendence_nginx_waf
    image: transcendence_nginx_waf
    environment:
      - PARANOIA=1
      - BLOCKING_PARANOIA=1
      - ANOMALY_INBOUND=5
      - ANOMALY_OUTBOUND=4
      - REPORTING_LEVEL=2
    expose:
      - 80
    networks:
      - proxy
      - develop_transcendence
    volumes:
      - ./nginx-waf/build/main/conf/before-crs.conf:/etc/modsecurity.d/owasp-crs/rules/REQUEST-900-EXCLUSION-RULES-BEFORE-CRS.conf
      - ./nginx-waf/build/main/conf/after-crs.conf:/etc/modsecurity.d/owasp-crs/rules/RESPONSE-999-EXCLUSION-RULES-AFTER-CRS.conf
      - ./nginx-waf/build/main/conf/default.conf:/etc/nginx/templates/conf.d/default.conf.template
      - certs:/etc/letsencrypt
      - webroot:/var/www/certbot

  haproxy:

    build: ./haproxy/build/main
    container_name: transcendence_haproxy
    image: transcendence_haproxy

    networks:
      - proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./haproxy/build/main/tools/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
      - certs:/etc/certs

  vault:
    build: ./vault/build/main
    cap_add:
      - IPC_LOCK
    container_name: transcendence_vault
    depends_on:
      - postgre-vault
    env_file:
      - .envs/.env.vault
    image: transcendence_vault
    ports:
      - 8200:8200
    restart: always

  postgre-vault:  
    build: ./vault/build/postgre
    container_name: transcendence_postgre_vault
    image: transcendence_postgre_vault
    env_file:
      - .envs/.env.vault

    restart: always  
    volumes:
      - pg_vault:/var/lib/postgresql/data

volumes:

  pg_vault:
  certs:
  webroot:

networks:
  proxy:
  develop_transcendence:
    external: true
