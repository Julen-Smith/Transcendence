version: '3.8'

services:

  vue:
    build: ./Services/Frontend
    env_file:
      - .envs/.env.vue
    image: transcendence_frontend_login
    ports:
      - "8080:8080"
    volumes:
      - ./Volumes/Frontend/Vue/Trascendence:/Trascendence
      - ./Volumes/Frontend/Logs/:/Logs

  login:
    build: 
      context: Services/Backend/login
      dockerfile: Dockerfile

    depends_on:
      - postgres
    image: transcendence_backend_login
    environment:
      - LOGGER_PARAMS
      - PARAMS
      - LOGIN_PORT

    env_file:
      - .envs/.env.login

    volumes:
      - v_login:/app
      - v_login_log:/log
      - v_login_tools:/app/tools

  gateway:
    build: 
      context: Services/Backend/gateway
      dockerfile: Dockerfile

    image: transcendence_backend_gateway
    environment:
      - LOGGER_PARAMS
      - PARAMS
      - GATEWAY_PORT

    env_file:
      - .envs/.env.gateway

    ports:
      - ${GATEWAY_PORT}:${GATEWAY_PORT}

    volumes:
      - v_gateway:/app
      - v_gateway_log:/log
      - v_gateway_tools:/app/tools
  
  postgres:  
    container_name: transcendence_bbdd_login 
    image: transcendence_database_login
    build:
      context: ./Services/Database/login/
    restart: always  
    environment:  
      - POSTGRES_USER
      - POSTGRES_PASSWORD 
      - POSTGRES_DB 

    volumes:
      - v_postgres_data:/var/lib/postgresql/data

  mail:  
    container_name: transcendence_mail 
    image: transcendence_mail
    build:
      context: ./Services/Mail/
    restart: always
    environment:
      - SMTP_USER
      - SMTP_PASS
    ports:
      - 25:25 
    #ports:  
    # - "5432:5432"
   
  grafana:
    image: grafana/grafana:8.0.6
    container_name: grafana
    restart: unless-stopped
    volumes:
    - grafana-data:/var/lib/grafana
    ports:
    - 3000:3000

  prometheus:
    image: prom/prometheus:v2.28.1
    container_name: prometheus
    restart: unless-stopped
    volumes:
    - ./Services/Prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    - prometheus-data:/prometheus
    ports:
    - 9090:9090
    command:
    - '--config.file=/etc/prometheus/prometheus.yml'
    - '--storage.tsdb.path=/prometheus'
    - '--storage.tsdb.retention.time=1y'
    - '--web.enable-lifecycle'

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    restart: unless-stopped
    ports:
    - 9100:9100
    command:
     - '--path.rootfs=/host'
    pid: host
    volumes:
      - '/:/host:ro,rslave'
  
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    expose:
    - 8080
    platform: linux/amd64
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro

  vault:
    build:
      context: ./Services/Vault
      dockerfile: Dockerfile
    cap_add:
      - IPC_LOCK
    container_name: vault
    depends_on:
      - postgres-vault
    env_file:
      - .envs/.env.vault
    image: transcendence_vault
    ports:
      - "8200:8200"
    restart: always

  postgres-vault:  
    container_name: transcendence_db_vault
    image: transcendence_db_vault
    build:
      context: ./Services/Database/Vault
    restart: always  
    env_file:
      - .envs/.env.vault

    volumes:
      - v_pg_vault_data:/var/lib/postgresql/data

volumes:
        v_gateway:
                driver: local
                driver_opts:
                        type: none
                        o: bind
                        device: ./Volumes/Backend/gateway/data

        v_gateway_log:
                driver: local
                driver_opts:
                        type: none
                        o: bind
                        device: ./Volumes/Backend/gateway/log

        v_gateway_tools:
                driver: local
                driver_opts:
                        type: none
                        o: bind
                        device: ./Services/Backend/gateway/tools
        v_login:
                driver: local
                driver_opts:
                        type: none
                        o: bind
                        device: ./Volumes/Backend/login/data

        v_login_log:
                driver: local
                driver_opts:
                        type: none
                        o: bind
                        device: ./Volumes/Backend/login/log

        v_login_tools:
                driver: local
                driver_opts:
                        type: none
                        o: bind
                        device: ./Services/Backend/login/tools

        v_postgres_data:
        v_pg_vault_data:

        grafana-data:
        prometheus-data:
        

