{"ast":null,"code":"export default {\n  props: {\n    errorMessage: String\n  },\n  data() {\n    return {\n      isVisible: true,\n      visible: true\n    };\n  },\n  methods: {\n    close() {\n      this.visible = false; // Comienza la animación de desvanecimiento.\n      setTimeout(() => {\n        this.isVisible = false; // Realmente elimina el elemento del DOM.\n        this.$emit('close');\n      }, 500); // Asegúrate de que este tiempo coincida con la duración de la transición de Tailwind.\n    }\n  },\n  mounted() {\n    setTimeout(() => {\n      this.close();\n    }, 2000); // Ajusta este tiempo al deseado para el cierre automático.\n  }\n};","map":{"version":3,"names":["props","errorMessage","String","data","isVisible","visible","methods","close","setTimeout","$emit","mounted"],"sources":["/Trascendence/src/components/PopUpError.vue"],"sourcesContent":["<template>\n  <div class=\"fixed bottom-20 right-20 z-50\" v-if=\"isVisible\" :class=\"{'opacity-0': !visible, 'transition-opacity duration-500': true}\">\n    <div class=\"bg-black text-red-500 p-4 rounded\">\n      <p>{{ errorMessage }}</p>\n      <button @click=\"close\" class=\"text-white\">Cerrar</button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    errorMessage: String\n  },\n  data() {\n    return {\n      isVisible: true,\n      visible: true\n    };\n  },\n  methods: {\n    close() {\n      this.visible = false; // Comienza la animación de desvanecimiento.\n      setTimeout(() => {\n        this.isVisible = false; // Realmente elimina el elemento del DOM.\n        this.$emit('close');\n      }, 500); // Asegúrate de que este tiempo coincida con la duración de la transición de Tailwind.\n    }\n  },\n  mounted() {\n    setTimeout(() => {\n      this.close();\n    }, 2000); // Ajusta este tiempo al deseado para el cierre automático.\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.popup {\n  position: fixed;\n  bottom: 10px;\n  right: 10px;\n  z-index: 9999; \n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.popup-inner {\n  background: black; /* Fondo negro */\n  color: red; /* Letras rojas */\n  padding: 20px;\n  border-radius: 5px; /* Bordes redondeados (opcional) */\n}\n</style>\n"],"mappings":"AAUA,eAAe;EACbA,KAAK,EAAE;IACLC,YAAY,EAAEC;EAChB,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,IAAI;MACfC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,KAAKA,CAAA,EAAG;MACN,IAAI,CAACF,OAAM,GAAI,KAAK,EAAE;MACtBG,UAAU,CAAC,MAAM;QACf,IAAI,CAACJ,SAAQ,GAAI,KAAK,EAAE;QACxB,IAAI,CAACK,KAAK,CAAC,OAAO,CAAC;MACrB,CAAC,EAAE,GAAG,CAAC,EAAE;IACX;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACRF,UAAU,CAAC,MAAM;MACf,IAAI,CAACD,KAAK,CAAC,CAAC;IACd,CAAC,EAAE,IAAI,CAAC,EAAE;EACZ;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}