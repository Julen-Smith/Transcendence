{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-29e300cc\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"bg-black text-red-500 p-4 rounded\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $data.isVisible ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass([\"fixed bottom-20 right-20 z-50\", {\n      'opacity-0': !$data.visible,\n      'transition-opacity duration-500': true\n    }])\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"p\", null, _toDisplayString($props.errorMessage), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.close && $options.close(...args)),\n    class: \"text-white\"\n  }, \"Cerrar\")])], 2 /* CLASS */)) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["class","$data","isVisible","_createElementBlock","key","_normalizeClass","visible","_createElementVNode","_hoisted_1","_toDisplayString","$props","errorMessage","onClick","_cache","args","$options","close","_createCommentVNode"],"sources":["/Transcendence/develop/vue/volume/main/src/components/PopUpError.vue"],"sourcesContent":["<template>\n  <div class=\"fixed bottom-20 right-20 z-50\" v-if=\"isVisible\" :class=\"{'opacity-0': !visible, 'transition-opacity duration-500': true}\">\n    <div class=\"bg-black text-red-500 p-4 rounded\">\n      <p>{{ errorMessage }}</p>\n      <button @click=\"close\" class=\"text-white\">Cerrar</button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    errorMessage: String\n  },\n  data() {\n    return {\n      isVisible: true,\n      visible: true\n    };\n  },\n  methods: {\n    close() {\n      this.visible = false; // Comienza la animación de desvanecimiento.\n      setTimeout(() => {\n        this.isVisible = false; // Realmente elimina el elemento del DOM.\n        this.$emit('close');\n      }, 500); // Asegúrate de que este tiempo coincida con la duración de la transición de Tailwind.\n    }\n  },\n  mounted() {\n    setTimeout(() => {\n      this.close();\n    }, 2000); // Ajusta este tiempo al deseado para el cierre automático.\n  }\n}\n</script>\n\n<style scoped>\n.popup {\n  position: fixed;\n  bottom: 5px; /* Ajusta esto a 0px para moverlo aún más abajo */\n  right: 5px; /* Ajusta esto a 0px para moverlo aún más a la derecha */\n  z-index: 9999; \n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.popup-inner {\n  background: black; \n  color: red; \n  padding: 10px;\n  border-radius: 5px\n</style>\n"],"mappings":";;;EAESA,KAAK,EAAC;AAAmC;;SADCC,KAAA,CAAAC,SAAS,I,cAA1DC,mBAAA,CAKM;IANRC,GAAA;IACOJ,KAAK,EADZK,eAAA,EACa,+BAA+B;MAAA,cAAyCJ,KAAA,CAAAK,OAAO;MAAA;IAAA;MACxFC,mBAAA,CAGM,OAHNC,UAGM,GAFJD,mBAAA,CAAyB,WAAAE,gBAAA,CAAnBC,MAAA,CAAAC,YAAY,kBAClBJ,mBAAA,CAAyD;IAAhDK,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,KAAA,IAAAD,QAAA,CAAAC,KAAA,IAAAF,IAAA,CAAK;IAAEd,KAAK,EAAC;KAAa,QAAM,E,sBAJtDiB,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}