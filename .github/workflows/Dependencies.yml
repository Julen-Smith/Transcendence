name: Dependencies Pipeline

on:
  workflow_dispatch:
    inputs:
      main_option:
        description: 'Choose the main command category'
        required: true
        default: 'Vault'
        type: choice
        options:
          - Vault
          - Nginx
          - Haproxy
          - Email
      vault_sub_option:
        description: 'Choose the specific Vault command'
        required: false
        type: choice
        options:
          - Get Unseal Keys
          - Restart Vault (Existing secrets K.O)
          - Introduce new secret
          - Get Secrets
      email_sub_option:
        description: 'Choose the specific Email command'
        required: false
        type: choice
        options:
          - Send Email
          - Check Email Status

jobs:
  handle-vault:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.main_option == 'Vault' }}
    steps:
      - name: Vault command selected
        run: echo "Vault command: ${{ github.event.inputs.vault_sub_option }}"

  handle-email:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.main_option == 'Email' }}
    steps:
      - name: Email command selected
        run: echo "Email command: ${{ github.event.inputs.email_sub_option }}"

  handle-nginx:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.main_option == 'Nginx' }}
    steps:
      - name: Nginx command selected
        run: echo "Nginx command selected"

  handle-haproxy:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.main_option == 'Haproxy' }}
    steps:
      - name: Haproxy command selected
        run: echo "Haproxy command selected"

  ssh-run:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up SSH agent
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Run SSH commands
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} -p ${{ secrets.SSH_PORT }} << 'EOF'
          echo "Conectado exitosamente"
          main_option="${{ github.event.inputs.main_option }}"
          sub_option="${{ github.event.inputs.sub_option }}"
        EOF
